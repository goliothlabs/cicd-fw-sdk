# Copyright (c) 2023 Golioth, Inc.
# SPDX-License-Identifier: Apache-2.0

name: Build & Deploy to Golioth

on:
  push:
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    container: golioth/golioth-zephyr-base:0.16.3-SDK-v0

    steps:
      - name: Setup West workspace
        run: |
          west init -m https://github.com/$GITHUB_REPOSITORY .
          west update --narrow -o=--depth=1
          west zephyr-export
          pip3 install -r deps/zephyr/scripts/requirements-base.txt
          west blobs fetch hal_espressif

      - name: Build with West
        run: |
          west build -p -b esp32_devkitc_wrover app/ -- -DCONFIG_GOLIOTH_SAMPLE_FW_VERSION=\"${{ inputs.version }}\"

      - name: Prepare artifacts
        run: |
          mv build/zephyr/zephyr.bin build/zephyr/golioth_${{ inputs.version }}.bin

      # Run IDs are unique per repo but are reused on re-runs
      - name: Save artifact
        uses: actions/upload-artifact@v3
        with:
          name: build_artifacts_${{ github.run_id }}
          path: |
            build/zephyr/golioth_${{ inputs.version }}.bin

  deploy:
    if: ${{ github.event_name != 'pull_request' }}

    needs: build

    runs-on: ubuntu-latest

    steps:
        - name: Checkout repo
          uses: actions/checkout@v4
        
        - name: Setup Golioth CLI
          uses: golioth/setup-goliothctl@main
          with:
            apiKey: ${{ secrets.APIKEY }}
            projectId: ${{ secrets.PROJECTID }}
        
        - name: List devices
          run: goliothctl device list
          
        # - name: Download artifact
        #   uses: actions/download-artifact@v3
        #   with:
        #     name: build_artifacts_${{ github.run_id }}

        # - name: Upload artifacts to release
        #   run: gh release upload --clobber ${{ inputs.version }} golioth_${{ inputs.version }}.bin
        #   env:
        #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}