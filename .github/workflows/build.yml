# Copyright (c) 2023 Golioth, Inc.
# SPDX-License-Identifier: Apache-2.0

name: Build firmware images

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Artifact Version.'
        required: true
        default: 'v0.0.0'
        type: string
    
  workflow_call:
    inputs:
      version:
        description: 'Artifact Version.'
        required: true
        default: 'v0.0.0'
        type: string

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ZEPHYR_SDK_VERSION: 0.16.1
      ZEPHYR_SDK_INSTALL_DIR: /opt/toolchains/zephyr-sdk-$ZEPHYR_SDK_VERSION
      ZEPHYR_SDK_TOOLCHAINS: "-t arm-zephyr-eabi"
      RUNNER_ARCH: x86_64
      SDK_FILENAME: zephyr-sdk-$ZEPHYR_SDK_VERSION_linux-$RUNNER_ARCH_minimal.tar.xz

    steps:
      - name: Zephyr OS dependencies
        run: |
          sudo apt-get -y update \
          && sudo apt-get -y install --no-install-recommends \
          cmake \
          device-tree-compiler \
          git \
          ninja-build \
          python3 \
          python3-pip \
          wget \
          xz-utils 

      - name: Install Zephyr SDK
        run: |
          wget -q "https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v$ZEPHYR_SDK_VERSION/$SDK_FILENAME" \
          && mkdir -p $ZEPHYR_SDK_INSTALL_DIR  \
          && tar -xvf $SDK_FILENAME -C $ZEPHYR_SDK_INSTALL_DIR --strip-components=1 \
          && $ZEPHYR_SDK_INSTALL_DIR/setup.sh -c $ZEPHYR_SDK_TOOLCHAINS

      - name: Install West
        run: |
          sudop apt-get -y update \
          && sudo apt-get -y install --no-install-recommends \
          python3 \
          python3-pip \
          && echo "[global]" >> /etc/pip.conf && echo "break-system-packages = true" >> /etc/pip.conf \
          && pip3 install --no-cache-dir wheel west

      - name: Setup West workspace
        run: |
          west init -m https://github.com/$GITHUB_REPOSITORY .
          west update --narrow -o=--depth=1
          west zephyr-export
          pip3 install -r deps/zephyr/scripts/requirements-base.txt
          west blobs fetch hal_espressif

      - name: Build with West
        run: |
          west build -p -b esp32_devkitc_wrover app/ -- -DCONFIG_GOLIOTH_SAMPLE_FW_VERSION=\"${{ inputs.version }}\"

      - name: Prepare artifacts
        run: |
          mv build/zephyr/zephyr.bin build/zephyr/golioth_${{ inputs.version }}.bin

      # Run IDs are unique per repo but are reused on re-runs
      - name: Save artifact
        uses: actions/upload-artifact@v3
        with:
          name: build_artifacts_${{ github.run_id }}
          path: |
            build/zephyr/golioth_${{ inputs.version }}.bin